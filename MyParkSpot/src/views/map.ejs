<!doctype html>
<html lang="en">
  <head>
    <%- include('shared/includes/meta') %> <%- include('shared/includes/styles')
    %> <%- include('shared/includes/leafletstyles') %>
    <title>MyParkSpot - Map</title>
  </head>
  <body>
    <div class="relative z-10"><%- include('shared/partials/header') %></div>
    <div id="map" class="relative z-0"></div>
    <div
      id="parking-info"
      class="fixed bottom-0 z-10 hidden w-full bg-white p-4 shadow-custom sm:p-6 md:px-10 xl:px-20">
      <div
        class="flex flex-col items-start justify-between sm:flex-row sm:items-center">
        <div class="mb-2 sm:mb-0">
          <h3 class="text-lg font-medium text-primary sm:text-xl">
            Parking spot information
          </h3>
          <p id="parking-details" class="mt-2 text-secondary"></p>
        </div>
        <div class="flex items-center justify-center gap-2 sm:gap-4">
          <% if (user) { %>
          <button
            type="submit"
            id="park-here"
            class="btn-sm btn transform rounded-full border bg-accent px-4 py-2 font-semibold transition duration-300 ease-in-out hover:scale-105 md:px-6 md:py-2">
            Park Here
          </button>
          <% } else { %>
          <button id="park-here" hidden></button>
          <a
            href="/auth/login"
            class="btn-sm btn transform rounded-full border bg-accent px-4 py-2 font-semibold transition duration-300 ease-in-out hover:scale-105 md:px-6 md:py-2">
            Park Here
          </a>
          <% } %>
          <button
            id="close-info"
            class="btn-sm btn transform rounded-full border px-4 py-2 font-semibold transition duration-300 ease-in-out hover:scale-105 md:px-6 md:py-2">
            Close
          </button>
        </div>
      </div>
    </div>
    <div
      id="parkModal"
      class="fixed inset-0 z-50 flex hidden items-center justify-center bg-black bg-opacity-50">
      <div
        class="relative w-full max-w-sm rounded-xl bg-white px-6 py-8 shadow-xl">
        <button
          type="button"
          id="closeParkModal"
          class="absolute right-6 top-5 text-lg text-gray-500 hover:text-gray-700 focus:outline-none">
          <i class="fa-solid fa-xmark"></i>
        </button>

        <h2 class="mb-4 text-xl font-semibold text-gray-800">
          Reserve Parking
        </h2>
        <form action="/reserve-parking" method="POST" class="space-y-6">
          <div>
            <h3 class="text-md mb-2 font-medium text-gray-700">
              Parking Duration
            </h3>
            <div class="grid grid-cols-1 gap-6 sm:grid-cols-1 md:grid-cols-2">
              <div
                class="duration-option transform cursor-pointer rounded-lg border border-gray-300 p-6 text-center transition-transform hover:scale-105 focus:outline-none"
                data-value="1">
                <p class="text-sm font-semibold text-gray-800">1 Hour</p>
              </div>

              <div
                class="duration-option transform cursor-pointer rounded-lg border border-gray-300 p-6 text-center transition-transform hover:scale-105 focus:outline-none"
                data-value="2">
                <p class="text-sm font-semibold text-gray-800">2 Hours</p>
              </div>

              <div
                class="duration-option transform cursor-pointer rounded-lg border border-gray-300 p-6 text-center transition-transform hover:scale-105 focus:outline-none"
                data-value="3">
                <p class="text-sm font-semibold text-gray-800">3 Hours</p>
              </div>

              <div
                class="duration-option transform cursor-pointer rounded-lg border border-gray-300 p-6 text-center transition-transform hover:scale-105 focus:outline-none"
                data-value="24">
                <p class="text-sm font-semibold text-gray-800">Full Day</p>
              </div>
            </div>
          </div>

          <input
            type="hidden"
            name="parkingDuration"
            id="parkingDuration"
            value="" />

          <div>
            <h3 class="text-md mb-2 font-medium text-gray-700">
              Select Your Car
            </h3>
            <% if (cars && cars.length > 0) { %>
            <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
              <% cars.forEach(function(car) { %> <% if (car.isParked) { %>
              <div
                class="car-option relative transform cursor-not-allowed rounded-lg border border-gray-300 p-4 opacity-50">
                <p class="text-md text-center font-semibold text-gray-800">
                  <%= car.licensePlate %>
                </p>
                <p class="mt-1 text-center text-sm text-gray-600">
                  <%= car.manufacturer %> <%= car.model %> <% if (car.year) { %>
                  (<%= car.year %>) <% } %>
                </p>
                <span
                  class="absolute right-2 top-2 rounded bg-accent px-2 py-1 text-xs text-white"
                  >Parked</span
                >
              </div>
              <% } else { %>
              <div
                class="car-option transform cursor-pointer rounded-lg border border-gray-200 p-4 transition-transform hover:scale-105 focus:outline-none"
                data-value="<%= car.id %>">
                <p class="text-md text-center font-semibold text-gray-800">
                  <%= car.licensePlate %>
                </p>
                <p class="mt-1 text-center text-sm text-gray-600">
                  <%= car.manufacturer %> <%= car.model %> <% if (car.year) { %>
                  (<%= car.year %>) <% } %>
                </p>
              </div>
              <% } %> <% }); %>
            </div>
            <% } else { %>
            <p class="text-sm text-gray-500">
              No cars available. Please add a car to reserve parking.
            </p>
            <% } %>
          </div>

          <input type="hidden" name="carId" id="carId" value="" />
          <input type="hidden" id="parkingSpot" name="parkingSpotId" value="" />
          <div class="flex justify-end space-x-4">
            <button
              type="button"
              id="cancelParkModal"
              class="btn-sm btn transform rounded-full border px-6 py-2 font-semibold hover:bg-gray-100">
              Cancel
            </button>
            <button
              type="submit"
              class="btn-sm btn transform rounded-full border bg-primary px-6 py-2 font-medium text-white hover:bg-hover disabled:opacity-50"
              id="submitParkBtn"
              disabled>
              Park
            </button>
          </div>
        </form>
      </div>
    </div>
    <%- include('shared/includes/leafletscripts') %>
    <script>
      function decodeHtmlEntities(text) {
        const textArea = document.createElement('textarea');
        textArea.innerHTML = text;
        return textArea.value;
      }

      const rawParkingSpots = '<%= parkingSpots %>';
      const decodedParkingSpots = decodeHtmlEntities(rawParkingSpots);
      const parsedParkingSpots = JSON.parse(decodedParkingSpots);

      const parkingSpots = parsedParkingSpots.map(spot => {
        return {
          id: spot.id,
          lat: spot.latitude,
          lng: spot.longitude,
          isOccupied: spot.isOccupied,
          price: spot.price,
        };
      });

      const map = L.map('map', {
        attributionControl: false,
        zoomControl: false,
        worldCopyJump: true,
        maxBoundsViscosity: 1.0,
      }).setView([43.3209, 21.8958], 14);

      L.tileLayer(
        'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',
        {
          subdomains: 'abcd',
          maxZoom: 22,
          minZoom: 2,
          opacity: 0.9,
          detectRetina: true,
        }
      ).addTo(map);

      L.control
        .attribution({
          position: 'bottomright',
          prefix: false,
        })
        .addAttribution('Leaflet | &copy; OpenStreetMap &copy; CARTO')
        .addTo(map);

      L.control
        .zoom({
          position: 'topleft',
        })
        .addTo(map);

      L.control
        .fullscreen({
          position: 'topright',
          title: 'View Fullscreen',
          titleCancel: 'Exit Fullscreen',
        })
        .addTo(map);

      L.control
        .locate({
          position: 'topright',
          flyTo: true,
          strings: {
            title: 'Show me where I am',
          },
        })
        .addTo(map);

      const parkingIconHtml =
        '<i class="fa-sharp-duotone fa-solid fa-square-parking" style="font-size: 26px; color: #5c7687;"></i>';
      const reservedParkingIconHtml =
        '<i class="fa-sharp-duotone fa-solid fa-square-parking" style="font-size: 26px; color: silver;"></i>';

      const parkingIcon = L.divIcon({
        html: parkingIconHtml,
        className: 'custom-div-icon',
        iconSize: [30, 30],
        iconAnchor: [15, 30],
        popupAnchor: [0, -30],
      });

      const reservedParkingIcon = L.divIcon({
        html: reservedParkingIconHtml,
        className: 'custom-div-icon',
        iconSize: [30, 30],
        iconAnchor: [15, 30],
        popupAnchor: [0, -30],
      });

      const markers = L.markerClusterGroup({
        showCoverageOnHover: false,
      });
      console.log(parkingSpots);
      parkingSpots.forEach(spot => {
        const marker = L.marker([spot.lat, spot.lng], {
          icon: spot.isOccupied ? reservedParkingIcon : parkingIcon,
        });

        marker.on('click', () => {
          document.getElementById('parking-info').classList.remove('hidden');
          if (spot.isOccupied) {
            document.getElementById('park-here').classList.add('hidden');
          } else {
            document.getElementById('park-here').classList.remove('hidden');
            document.getElementById('parkingSpot').value = spot.id;
          }
          document.getElementById('parking-details').innerHTML = `
            <p>Status: ${spot.isOccupied ? 'Occupied' : 'Available'}</p>
            <p>Price: ${spot.price} EUR/hour</p>
          `;
          adjustMapHeight();
        });

        markers.addLayer(marker);
      });

      map.addLayer(markers);

      function adjustMapHeight() {
        const parkingInfo = document.getElementById('parking-info');
        const map = document.getElementById('map');
        if (parkingInfo.classList.contains('hidden')) {
          map.style.height = 'calc(100% - 90px)';
        } else {
          const parkingInfoHeight = parkingInfo.offsetHeight;
          map.style.height = `calc(100% - 90px - ${parkingInfoHeight}px)`;
        }
      }

      window.addEventListener('resize', adjustMapHeight);

      document.getElementById('close-info').addEventListener('click', () => {
        document.getElementById('parking-info').classList.add('hidden');
        adjustMapHeight();
      });

      const parkModal = document.getElementById('parkModal');
      const closeParkModalBtn = document.getElementById('closeParkModal');
      const cancelParkModalBtn = document.getElementById('cancelParkModal');
      const openParkModal = document.getElementById('park-here');

      const durationOptions = document.querySelectorAll('.duration-option');
      const carOptions = document.querySelectorAll('.car-option');
      const parkingDurationInput = document.getElementById('parkingDuration');
      const carIdInput = document.getElementById('carId');
      const submitParkBtn = document.getElementById('submitParkBtn');

      openParkModal.addEventListener('click', () => {
        parkModal.classList.remove('hidden');
      });

      parkModal.addEventListener('click', e => {
        if (e.target === parkModal) {
          parkModal.classList.add('hidden');
          resetModalSelections();
        }
      });

      let selectedDuration = null;
      let selectedCarId = null;

      durationOptions.forEach(option => {
        option.addEventListener('click', () => {
          if (!option.dataset.value) return;

          durationOptions.forEach(opt =>
            opt.classList.remove('border-gray-200', 'border-primary')
          );

          option.classList.add('border-primary');
          selectedDuration = option.getAttribute('data-value');
          parkingDurationInput.value = selectedDuration;
          toggleSubmitButton();
        });
      });

      carOptions.forEach(option => {
        option.addEventListener('click', () => {
          if (!option.dataset.value) return;

          carOptions.forEach(opt =>
            opt.classList.remove('border-gray-200', 'border-primary')
          );

          option.classList.add('border-primary');
          selectedCarId = option.getAttribute('data-value');
          carIdInput.value = selectedCarId;
          toggleSubmitButton();
        });
      });

      function toggleSubmitButton() {
        if (selectedDuration && selectedCarId) {
          submitParkBtn.disabled = false;
        } else {
          submitParkBtn.disabled = true;
        }
      }

      closeParkModalBtn.addEventListener('click', () => {
        parkModal.classList.add('hidden');
        resetModalSelections();
      });

      cancelParkModalBtn.addEventListener('click', () => {
        parkModal.classList.add('hidden');
        resetModalSelections();
      });

      function resetModalSelections() {
        durationOptions.forEach(opt => {
          opt.classList.remove('border-primary');
        });
        parkingDurationInput.value = '';
        selectedDuration = null;

        carOptions.forEach(opt => {
          opt.classList.remove('border-primary');
        });
        carIdInput.value = '';
        selectedCarId = null;

        submitParkBtn.disabled = true;
      }

      toggleSubmitButton();
    </script>

    <%- include('shared/includes/scripts') %>
  </body>
</html>
